syntax = "proto3";

option go_package = "plcontrollerapi";

import "github.com/NEU-SNS/ReverseTraceroute/lib/datamodel/stats.proto";
import "github.com/NEU-SNS/ReverseTraceroute/lib/datamodel/ping.proto";
import "github.com/NEU-SNS/ReverseTraceroute/lib/datamodel/traceroute.proto";
import "github.com/NEU-SNS/ReverseTraceroute/lib/datamodel/vantagepoint.proto";
import "github.com/NEU-SNS/ReverseTraceroute/lib/datamodel/register.proto";
import "github.com/NEU-SNS/ReverseTraceroute/lib/datamodel/recspoof.proto";
import "github.com/NEU-SNS/ReverseTraceroute/lib/datamodel/update.proto";

service PLController {

    rpc Ping(datamodel.PingArg) returns (datamodel.Ping) {}
    rpc Traceroute(datamodel.TracerouteArg) returns (datamodel.Traceroute) {}
    rpc Stats(datamodel.StatsArg) returns (datamodel.Stats) {}
    rpc Register(datamodel.VantagePoint) returns (datamodel.RegisterResponse) {}
    rpc UpdateVp(datamodel.VantagePoint) returns (datamodel.UpdateResponse) {}
    rpc NotifyRecSpoof(datamodel.NotifyRecSpoof) returns (datamodel.NotifyRecSpoofResponse) {}
    rpc GetVP(datamodel.VPRequest) returns (datamodel.VPReturn) {}
    rpc GetAllVPs(datamodel.VPRequest) returns (datamodel.VPReturn) {}
    rpc GetSpoofingVPs(datamodel.VPRequest) returns (datamodel.VPReturn) {}
    rpc GetTimeStampVPs(datamodel.VPRequest) returns (datamodel.VPReturn) {}
    rpc GetRecordRouteVPs(datamodel.VPRequest) returns (datamodel.VPReturn){}
    rpc GetActiveVPs(datamodel.VPRequest) returns (datamodel.VPReturn) {}
}
