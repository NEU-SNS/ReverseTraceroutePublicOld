// Code generated by protoc-gen-go.
// source: github.com/NEU-SNS/ReverseTraceroute/datamodel/vantagepoint.proto
// DO NOT EDIT!

package datamodel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VantagePoint struct {
	Hostname     string `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	Ip           uint32 `protobuf:"varint,2,opt,name=ip" json:"ip,omitempty"`
	Sshable      bool   `protobuf:"varint,3,opt,name=sshable" json:"sshable,omitempty"`
	Timestamp    bool   `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	RecordRoute  bool   `protobuf:"varint,5,opt,name=record_route" json:"record_route,omitempty"`
	LastUpdated  int64  `protobuf:"varint,6,opt,name=last_updated" json:"last_updated,omitempty"`
	CanSpoof     bool   `protobuf:"varint,7,opt,name=can_spoof" json:"can_spoof,omitempty"`
	Controller   uint32 `protobuf:"varint,8,opt,name=controller" json:"controller,omitempty"`
	ReceiveSpoof bool   `protobuf:"varint,9,opt,name=receive_spoof" json:"receive_spoof,omitempty"`
	Site         string `protobuf:"bytes,10,opt,name=site" json:"site,omitempty"`
	SpoofChecked int64  `protobuf:"varint,11,opt,name=spoof_checked" json:"spoof_checked,omitempty"`
	Port         uint32 `protobuf:"varint,12,opt,name=port" json:"port,omitempty"`
}

func (m *VantagePoint) Reset()         { *m = VantagePoint{} }
func (m *VantagePoint) String() string { return proto.CompactTextString(m) }
func (*VantagePoint) ProtoMessage()    {}

type VPRequest struct {
}

func (m *VPRequest) Reset()         { *m = VPRequest{} }
func (m *VPRequest) String() string { return proto.CompactTextString(m) }
func (*VPRequest) ProtoMessage()    {}

type VPReturn struct {
	Vps []*VantagePoint `protobuf:"bytes,1,rep,name=vps" json:"vps,omitempty"`
}

func (m *VPReturn) Reset()         { *m = VPReturn{} }
func (m *VPReturn) String() string { return proto.CompactTextString(m) }
func (*VPReturn) ProtoMessage()    {}

func (m *VPReturn) GetVps() []*VantagePoint {
	if m != nil {
		return m.Vps
	}
	return nil
}
